#################################################
#              Spoolman                         #
#################################################
[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

#################################################
#              Homing (sensorless)              #
#################################################
#[homing_override] homing_override is integrated via the sensorless_homing_override.cfg

#################################################
#              Bedleveling Manual              #
#################################################
[screws_tilt_adjust]
screw1: 4, 26.60
screw1_name: Front left screw
screw2: 261, 4
screw2_name: Front right screw
screw3: 261, 282.60
screw3_name: Rear right screw
screw4: 4, 282.60
screw4_name: Rear left screw
horizontal_move_z: 8
speed: 300
screw_thread: CW-M4

[gcode_macro LEVELING_SCREW]
description: Executes the homing of all axes and starts Screws Tilt Calculate
gcode:
    _CG28
    SCREWS_TILT_CALCULATE

[gcode_macro BED_MESH_CALIBRATION]
gcode:
    M140 S60    #Set the bed temperature to 60 degrees Celsius
    M190 S60    #Wait until the print bed has reached 60 degrees Celsius
    BED_MESH_CLEAR
    _CG28
    BED_MESH_CALIBRATE PROFILE="default"    #Start bed leveling with the "default" profile
    M140 S0     # Switch off the heating bed
    G1 X140 Y140 F6000  #Move the print head to the center of the bed (280/2=140)
    SAVE_CONFIG # Save the configuration

#################################################
#         conditional homing                    #
#################################################


#################################################
#              Force Move                       #
#################################################
[force_move]
enable_force_move : false


#################################################
#             Deactivate stepper motors         #
#################################################
#[gcode_macro M84]
#rename_existing:M84.1
#gcode:
#	SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
#	SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
#	SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
#	SET_STEPPER_ENABLE STEPPER=extruder enable=0
	#SET_KINEMATIC_POSITION

[gcode_macro M84]
rename_existing:M84.1
description: Disable stepper motors
gcode:
    # Disable all steppers by default
    {% if params.A is not defined and params.X is not defined and params.Y is not defined and params.Z is not defined and params.E is not defined %}
    M18
    {% else %}
    # Disable specific steppers based on parameters
    {% if params.X is defined %}
    M18 X
    {% endif %}
    {% if params.Y is defined %}
    M18 Y
    {% endif %}
    {% if params.Z is defined %}
    M18 Z
    {% endif %}
    {% if params.E is defined %}
    M18 E
    {% endif %}
    {% if params.A is defined %}
    M18 A
    {% endif %}
    {% endif %}



#################################################
#              Resonance calibration            #
#################################################
[gcode_macro SHAPER_CALIBRATE]
rename_existing: RESHAPER_CALIBRATE
gcode:
    RESHAPER_CALIBRATE FREQ_START=30 FREQ_END=150

#################################################
#              Print start                      #
#################################################
[gcode_macro PRINT_START]
gcode:

#################################################
#              Print end                        #
#################################################
[gcode_macro PRINT_END]
gcode:
    M106 P2 S0
    M106 P0 S0
    M106 P3 S0  #Switch off the activated carbon fan
    
    M104 S0
    M140 S0
    M141 S0

    M220 S100
    M221 S100

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    BED_MESH_CLEAR      
    BED_MESH_PROFILE LOAD=default
    G31
    SET_FILAMENT_SENSOR SENSOR=fila ENABLE=0
    M84

    BEEP I=2 DUR=500


    
#################################################
#              Beep output                      #
#################################################
[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}        # Repetitions of the beep tone - Standard 1x
    {% set dur = params.DUR|default(100)|int %}  # Beep length - Standard 100ms

    {% if printer["output_pin sound"].value|int == 1 %}
        {% for iteration in range(i|int) %}
            SET_PIN PIN=beeper VALUE=1
            G4 P{dur}
            SET_PIN PIN=beeper VALUE=0
    		G4 P{dur}
        {% endfor %}
    {% endif %}


#################################################
#              Manual bed leveling              #
#################################################
[gcode_macro G30]
gcode:
    BED_MESH_CLEAR      
#    _CG28 
    BED_MESH_CALIBRATE mesh_min=10,10  mesh_max=265,265  METHOD=manual 


#################################################
#              Assembly space heating           #
#################################################
[gcode_macro M141]
gcode:
    {% set s = params.S|float %}
    SET_HEATER_TEMPERATURE HEATER=chamber TARGET={([s, 65]|min)}
    
#################################################
# Waiting time until the assembly space is      #
# heated to a definedtemperature is reached     #
#################################################
[gcode_macro M191]
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M141 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR="heater_generic hot" MINIMUM={([s, 65]|min)} #MAXIMUM={s+1}   
    {% endif %}


#################################################
#              Fan control                      #
#################################################     
[gcode_macro M106]
gcode:
    {% if params.P is defined %}
      {% if params.S is defined %}
        SET_PIN PIN=fan{params.P|int} VALUE={params.S|int}
      {% else %}
        SET_PIN PIN=fan{params.P|int} VALUE=255
      {% endif %}
    {% endif %} 

    {% if params.T is defined %}
        {% if (params.T|int)==-2 %}
          {% if params.S is defined %}       
            SET_PIN PIN=fan3 VALUE={params.S|int}
          {% else %}
            SET_PIN PIN=fan3 VALUE=255
          {% endif %}
        {% endif %}
    {% endif %}

    {% if params.P is undefined %}
    {% if params.T is undefined %}
    {% if params.S is defined %}
            SET_PIN PIN=fan0 VALUE={params.S|int}
       {% else %}
            SET_PIN PIN=fan0 VALUE=255       
    {% endif %}
    {% endif %}
    {% endif %}


#################################################
#              Fan "Fan0" off                   #
################################################# 
[gcode_macro M107]
gcode:  
    SET_PIN PIN=fan0 VALUE=0 
#    SET_PIN PIN=fan1 VALUE=0
#    SET_PIN PIN=fan2 VALUE=0 


#################################################
#PID calibration of the heating bed and extruder#
#################################################
[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set e = printer.toolhead.extruder %}
  {% set T = params.TEMPERATURE|default(210)|float %}
  {% set S = params.FAN_IN_PERCENT|default(0)|float *2.55 %}
  {% set P = printer.configfile.config[e].pid_kp|float %}
  {% set I = printer.configfile.config[e].pid_ki|float %}
  {% set D = printer.configfile.config[e].pid_kd|float %}
  M106 S{S}
  M118 // PID parameters: pid_Kp={P} pid_Ki={I} pid_Kd={D}  (old)
  PID_CALIBRATE HEATER={e} TARGET={T}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set T = params.TEMPERATURE|default(60)|float %}
  {% set P = printer.configfile.config['heater_bed'].pid_kp|float %}
  {% set I = printer.configfile.config['heater_bed'].pid_ki|float %}
  {% set D = printer.configfile.config['heater_bed'].pid_kd|float %}
  M118 // PID parameters: pid_Kp={P} pid_Ki={I} pid_Kd={D}  (old)
  PID_CALIBRATE HEATER=heater_bed TARGET={T}
  TURN_OFF_HEATERS
  SAVE_CONFIG

#################################################
#            Filament sensor control            #
#################################################
[gcode_macro M8029]
gcode:
     {% if params.D is defined %}
       {% if (params.D|int)==1 %} 
        SET_FILAMENT_SENSOR SENSOR=fila  ENABLE=1
       {% endif %}
       {% if (params.D|int)==0 %} 
        SET_FILAMENT_SENSOR SENSOR=fila  ENABLE=0
       {% endif %}
     {% endif %}

#################################################
#            Pressure Advanced                  #
#################################################     
[gcode_macro M900]
gcode:
    {% if params.K is defined %} 
          SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}  
    {% if params.T is defined %}    
       SET_PRESSURE_ADVANCE SMOOTH_TIME={params.T}
    {% endif %} 
  
#################################################
#      Z-Offset during the printing process     #
#################################################
[gcode_macro M290]
gcode:
   SET_GCODE_OFFSET Z_ADJUST={params.Z}

#################################################
#      Homing and resonance calibration         #
#################################################
[gcode_macro M901]
gcode:
#    M104 S140
    _CG28
    SHAPER_CALIBRATE
    SAVE_CONFIG

#################################################
#      Stepper motors and PWC off               #
#################################################
[gcode_macro M81]
description: PowerOff
gcode: 
  M84
  SET_PIN PIN=pwc VALUE=0



#################################################
#          Pause printing process               #
#################################################       
#[gcode_macro M0]
#gcode:
 #   PAUSE
#################################################
#          Pause printing process               #
#################################################
[gcode_macro M25]
rename_existing: M9925
gcode:
    PAUSE

#################################################
#          Output pin Sound                     #
#################################################    
[output_pin sound]
pin: PA13
value:0

#################################################
#          Beep ON                              #
#################################################
[gcode_macro beep_on]
gcode:
    SET_PIN PIN=sound VALUE=1

#################################################
#          Beep OFF                             #
#################################################    
[gcode_macro beep_off]
gcode:
    SET_PIN PIN=sound VALUE=0

#################################################
# Sets the extruder temperature to a            #
# specified value and holds this value.         #
#################################################
[gcode_macro M109]
rename_existing: M99109        
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Sets hotend temperature
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   # Waits for the temperature to be reached
    {% endif %}
      
#################################################
#                 Calibration                   #
#################################################
#To summarize, this macro performs a series of steps to perform a bed calibration.
#Starting with deleting the old calibration data, homing and moving the print head to the center of the bed.
#A 15 mm upward movement, aborting the current print process, performing the measuring head calibration and finally returning the print head to the Z position 0.
[gcode_macro M4029]
gcode:
    BED_MESH_CLEAR
    G91 
    G1 Z10 F600
    G90
    _CG28
    G1 X{printer.toolhead.axis_maximum.x/2 - printer.probe["x_offset"]} Y{printer.toolhead.axis_maximum.y/2 - printer.probe["y_offset"]} F7800
    G1 Z15 F600
    ABORT
    PROBE_CALIBRATE
    ABORT
    G0 Z0

#################################################
#                 Unload filament               #
#################################################
[gcode_macro UNLOAD_FILAMENT]
description: Unloads filament from toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(215)|int %}
  M109 S{EXTRUDER_TEMP}       ; heat up the hotend
  M83                         ; set extruder to relative mode
  G1 E5 F150                 ; extrude a small amount to elimate soften the filament
  G1 E-8 F1800                ; quickly retract a small amount to elimate stringing
  G4 P200                     ; pause for a short amount of time
  G1 E-50 F300                ; retract slowly the rest of the way
  M400                        ; wait for moves to finish
  M117 Unload Complete!


#################################################
#                 Load filament                 #
#################################################
[gcode_macro LOAD_FILAMENT]
description: Loads filament to toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(215)|int %}
  M109 S{EXTRUDER_TEMP}       ; heat up the hotend
  M83                         ; set extruder to relative mode
  G1 E5 F120                  ; feed filament
  G1 E5 F300                 ; feed filament
  G1 E40 F600                ; feed filament
  G1 E15 F300                 ; feed filament
  G1 E15 F120                 ; feed filament
  G4 P200                     ; pause for a short amount of time
  G1 E10 F90                  ; feed filament
  M400                        ; wait for moves to finish
  M117 Load Complete!

[gcode_macro M600]
description: Change filament and park toolhead at X=165 Y=50 Z=30
gcode:
    # Save current position
    SAVE_GCODE_STATE NAME=ChangeFilament

    # Move to a safe height above the bed
    G91                      ; Relative positioning
    G1 Z10 F6000             ; Move Z up by 10mm
    G90                      ; Absolute positioning

    # Park the toolhead at the specified coordinates
    G1 X165 Y50 Z30 F6000    ; Move to the filament change position

    # Pause for filament change
    PAUSE

    # Restore the previous position
    RESTORE_GCODE_STATE NAME=ChangeFilament
       SET_FILAMENT_SENSOR SENSOR=fila  ENABLE=0

[gcode_macro SWAP_RESUME] 
gcode:
    RESTORE_GCODE_STATE NAME=M600_state
    SET_FILAMENT_SENSOR SENSOR=fila  ENABLE=1
     
#################################################
#          Value transfer for Macro G29 (1)     #
#################################################
[gcode_macro G31]
gcode:
    SET_GCODE_VARIABLE MACRO=G29 VARIABLE=k VALUE=1

#################################################
#          Value transfer for Macro G29 (0)     #
#################################################
[gcode_macro G32]
gcode:
    SET_GCODE_VARIABLE MACRO=G29 VARIABLE=k VALUE=0

#################################################
#          Bedmesh calibration  KAMP            #
#################################################
[gcode_macro G29]
variable_k:1
gcode:

    {% if k|int==1 %}
        BED_MESH_CLEAR      
#    _CG28   
        BED_MESH_CALIBRATE PROFILE=kamp  
    {% endif %}

#################################################
#          Speed limits                         #
#################################################
[gcode_macro M204]
rename_existing: M99204
gcode:
    {% if params.S is defined %}
        {% set s = params.S|float %}
    {% endif %}
    {% if params.P is defined %}
    {% if params.T is defined %}
        {% set s = [params.P|float ,params.T|float] | min %}
    {% endif %}
    {% endif %}

    SET_VELOCITY_LIMIT ACCEL={s}
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={s/2}

#################################################
#          Komensation X-Twist                  #
#################################################
[gcode_macro M1029]
gcode:
#    X_TWIST_PROFILE_LOAD NAME=default
#    X_TWIST_COMPENSATE_MESH MESH_NAME=default COMPENSATION_NAME=default
#    SAVE_CONFIG

[gcode_macro M106]
gcode:
    {% if params.P is defined %}
      {% if params.S is defined %}
        {% if (params.P|int) == 0 %}
          SET_PIN PIN=partfan VALUE={params.S|int}
        {% elif (params.P|int) == 2 %}
          SET_PIN PIN=sidefan VALUE={params.S|int}
        {% elif (params.P|int) == 3 %}
          SET_PIN PIN=filterfan VALUE={params.S|int}
        {% else %}
          SET_PIN PIN=fan{params.P|int} VALUE={params.S|int}
        {% endif %}
      {% else %}
        {% if (params.P|int) == 0 %}
          SET_PIN PIN=partfan VALUE=255
        {% elif (params.P|int) == 2 %}
          SET_PIN PIN=sidefan VALUE=255
        {% elif (params.P|int) == 3 %}
          SET_PIN PIN=filterfan VALUE=255
        {% else %}
          SET_PIN PIN=fan{params.P|int} VALUE=255
        {% endif %}
      {% endif %}
    {% endif %} 

    {% if params.T is defined %}
      {% if (params.T|int) == -2 %}
        {% if params.S is defined %}
          SET_PIN PIN=filterfan VALUE={params.S|int}
        {% else %}
          SET_PIN PIN=filterfan VALUE=255
        {% endif %}
      {% endif %}
    {% endif %}

    {% if params.P is undefined %}
      {% if params.T is undefined %}
        {% if params.S is defined %}
          SET_PIN PIN=partfan VALUE={params.S|int}
        {% else %}
          SET_PIN PIN=partfan VALUE=255
        {% endif %}
      {% endif %}
    {% endif %}

